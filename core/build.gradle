apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'blockcanaryex'
block {
    debugEnabled true //在debug模式下开启方法采样，默认为true
    releaseEnabled false //在release模式下开启方法采样，默认为false
    excludePackages = [] //不希望进行方法采样的包名, 比如: ['com.android', 'android.support']
    excludeClasses = [] //不希望进行方法采样的类名
    includePackages = [] //指定开启方法采样的包名，如果不为空，则其它没有包括进来的包都不会开启方法采样

    scope {
        project true //开启主项目代码方法采样，默认为true
        projectLocalDep true //开启主项目本地libs代码(比如.jar)方法采样，默认为false,
        subProject true //开启子项目代码方法采样，默认为true
        subProjectLocalDep true //开启子项目本地libs方法采样，默认为false
        externalLibraries true //开启第三方libs方法采样，默认为false
    }
}
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    android {

        packagingOptions {
            exclude 'META-INF/DEPENDENCIES.txt'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/notice.txt'
            exclude 'META-INF/license.txt'
            exclude 'META-INF/dependencies.txt'
            exclude 'META-INF/LGPL2.1'
            exclude 'META-INF/rxjava.properties'
        }

        lintOptions {
            abortOnError false
            disable 'MissingTranslation', 'ExtraTranslation'
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api project(':configure')
    api project(':widget')
    api rootProject.ext.dependencies["dagger"]
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["rxkotlin"]
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["rxandroid"]
    api rootProject.ext.dependencies["rxpermission"]
    api rootProject.ext.dependencies["rxlifecycle"]
    api rootProject.ext.dependencies["rxlifecycle-component"]
    api rootProject.ext.dependencies["retrofit-adapter"]
    implementation rootProject.ext.dependencies["retrofit-covert"]
    implementation rootProject.ext.dependencies["okhttp"]
    implementation rootProject.ext.dependencies["okhttp-logging"]
    implementation rootProject.ext.dependencies["okhttp-cache"]
    implementation rootProject.ext.dependencies["stetho"]
    implementation rootProject.ext.dependencies["stetho-okhttp"]
    
    kapt rootProject.ext.apt["dagger-compiler"]
}
repositories {
    mavenCentral()
}
